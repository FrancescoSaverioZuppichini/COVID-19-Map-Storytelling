{"version":3,"sources":["config.js","utils.js","CovidDataInfo.js","Title.js","Chapter.js","Chapters.js","HazardButton.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["config","style","accessToken","showMarkers","theme","alignment","header","title","subtitle","byline","footer","chapters","id","name","location","longitude","latitude","zoom","pitch","bearing","countries","date","duration","marker","slide","transitions","break","TRANSITION_EVENTS","BREAK","ease","easeCubic","WORLD_COORDINATE","CovidDataInfo","total","country","className","format","Confirmed","Deaths","Recovered","ReactMarkdown","require","Title","source","alignments","left","center","right","DummyText","Chapter","text","currentChapterID","covidData","classList","Chapters","map","chapter","key","HazardButton","onClick","icon","isInFullMap","src","Footer","initialViewState","App","state","currentChapter","viewState","isFlyingToFullMap","isFlyingFromFullMap","data","totalCovidData","countryCovidData","geoCountries","scroller","scrollama","setChapterLocation","setState","onHazardButton","transitionEasing","transitionDuration","transitionInterpolator","FlyToInterpolator","setTimeout","onViewStateChange","mapStyle","zIndex","position","window","addEventListener","resize","this","setup","step","offset","progress","onStepEnter","response","a","element","moment","undefined","axios","get","getDataFromDate","onStepExit","geoDatas","Promise","all","then","china","features","el","properties","NAME","type","filter","d","includes","GeoJsonLayer","pickable","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getRadius","getLineWidth","getElevation","findDataForGeoRegion","find","getName","province","stroked","colour","covisData","Number","getLineColor","onHover","object","x","y","dateFormat","url","csvParser","csv","fromString","region","aggregateRegion","aggregated","aggregateAll","catch","e","console","error","geoLayer","getCovidGeoLayer","getChapterGeoLayer","controller","MapController","layers","mapboxApiAccessToken","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13d712e8.chunk.js","sourcesContent":["var config = {\n\tstyle: 'mapbox://styles/mapbox/dark-v10',\n\taccessToken: 'pk.eyJ1IjoienVwcGlmIiwiYSI6ImNqdm96Z3d2ejFibG80OXZuZWdwMWgyemwifQ.aFnHrPBYUqnYcK2jAwzAZA',\n\tshowMarkers: true,\n\ttheme: 'light',\n\talignment: 'left',\n\theader: `# COVID-19\n## A story told by maps\n*By a Francesco Saverio Zuppichini and Riccardo Pisoni*\n\nWe decided to tell the story of the new pandemic known as *corona virus* (COVID-19) using maps. At any time you can press the button on the down right with the hazard icon to see all the cases on the story's date in the world.\n\n**Behind each number there is a person**, remember it.\n\t`,\n\ttitle: 'COVID-19',\n\tsubtitle: 'A story told by maps',\n\tbyline: 'By a Francesco Saverio Zuppichini and Riccardo Pisoni',\n\tfooter: 'COVID-19 Map story',\n\tchapters: [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 102.63073,\n\t\t\t\tlatitude: 35.53723,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tcountries: [ 'China' ],\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdate: \"31-12-2019\",\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.301859,\n\t\t\t\tlatitude: 30.592357,\n\t\t\t\tzoom: 10,\n\t\t\t\tpitch: 60,\n\t\t\t\tbearing: 0\n            },\n            duration: 4000,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdate: \"02-01-2020\",\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.275273,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 15,\n\t\t\t\tpitch: 15,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude: 114.28039,\n\t\t\t\tlatitude: 30.66877\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdate: \"22-01-2020\",\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  9.86052,\n\t\t\t\tlatitude: 27.91264 ,\n\t\t\t\tzoom: 2.2,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n            },\n            duration: 4000,\n\t\t\tcountries: [ 'China', 'Hong Kong', 'Taiwan', 'United States of America', 'Japan', 'Thailand', 'South Korea']\n        },\n        \n        {\n\t\t\tid: 4,\n\t\t\tdate: \"22-01-2020\",\n\t\t\tname: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.258286,\n\t\t\t\tlatitude: 30.617847,\n\t\t\t\tzoom: 14,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude:  114.261636,\n\t\t\t\tlatitude: 30.617810,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdate: '27-01-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 104.68358,\n\t\t\t\tlatitude: 33.21781,\n\t\t\t\tzoom: 4,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdate: '27-01-2020',\n\t\t\tname: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude: -117.60365,\n\t\t\t\tlatitude: 34.05862,\n\t\t\t\tzoom: 12,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude: -117.60365,\n\t\t\t\tlatitude: 34.05862,\n\t\t\t},\n\t\t\tduration: 5000,\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tname: 'first-patients',\n\t\t\tslide: true\n        },\n        {\n\t\t\tid: 8,\n\t\t\tdate: '29-01-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  114.275273,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 45,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 2000,\n        },\n        {\n\t\t\tid: 9,\n\t\t\tdate: '29-01-2020',\n\t\t\tname: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude:   7.33942,\n\t\t\t\tlatitude: 50.81065,\n\t\t\t\tzoom: 5,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n            duration: 3000,\n            countries: [ 'Germany']\n        },\n        {\n\t\t\tid: 10,\n\t\t\tdate: ' 31-01-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:   7.33942,\n\t\t\t\tlatitude: 50.81065,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n            countries: [ 'Germany']\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdate: '02-02-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  119.20476,\n\t\t\t\tlatitude: 10.76389,\n\t\t\t\tzoom: 5,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t\tcountries: ['Philippines']\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdate: \"03-02-2020\",\n\t\t\tname : '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  9.86052,\n\t\t\t\tlatitude: 27.91264 ,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 1000\n\t\t},\n\t\t{\n\t\t\tid: 13,\n\t\t\tdate: '04-02-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 139.56233,\n\t\t\t\tlatitude: 35.43110 ,\n\t\t\t\tzoom: 11,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 4000\n\t\t},\n\t\t{\n\t\t\tid: 14,\n\t\t\tdate: '04-02-2020',\n\t\t\tname: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -107.68517,\n\t\t\t\tlatitude: 38.67691 ,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t\tcountries: [ 'US' ]\n\t\t},\n\t\t{\n\t\t\tid: 15,\n\t\t\tdate: '05-02-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -107.68517,\n\t\t\t\tlatitude: 38.67691 ,\n\t\t\t\tzoom: 4,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000\n\t\t},\n\t\t{\n\t\t\tid: 16,\n\t\t\tdate: '06-02-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 102.63073,\n\t\t\t\tlatitude: 35.53723,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 17,\n\t\t\tdate: '07-02-2020',\n\t\t\tname: '0',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 113.49339,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 18,\n\t\t\tdate: '07-02-2020',\n\t\t\tname: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -114.95366,\n\t\t\t\tlatitude: 55.91607,\n\t\t\t\tzoom: 3.8,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tcountries: [ 'Canada' ]\n\n\t\t},\n\t]\n}\n\n// https://demos.mapbox.com/location-helper/\n\nexport default config\n","import DeckGL, { TRANSITION_EVENTS } from 'deck.gl'\nimport { easeCubic } from 'd3-ease'\n\n\nexport function aggregateAll(data) {\n    let aggregated = {\n        Confirmed: 0, Deaths: 0, Recovered: 0\n    }\n\n    for (let el of data) {\n        aggregated.Confirmed += Number(el.Confirmed)\n        aggregated.Deaths += Number(el.Deaths)\n        aggregated.Recovered += Number(el.Recovered)\n\n    }\n\n    return aggregated\n}\n\nexport function aggregateRegion(data, region) {\n    let covisData = { Confirmed: 0, Deaths: 0, Recovered: 0 }\n\n    for (let el of data) {\n        if (el['Country/Region'] === region) {\n            covisData.Confirmed += Number(el.Confirmed)\n            covisData.Deaths += Number(el.Deaths)\n            covisData.Recovered += Number(el.Recovered)\n        }\n    }\n\n    covisData['Country/Region'] = region\n\n    return [covisData, ...data]\n}\n\nexport const transitions = {\n\tbreak: () => TRANSITION_EVENTS.BREAK,\n\tease: easeCubic\n}\n\nexport const WORLD_COORDINATE = {\n\tlatitude: 15.38585,\n\tlongitude: 26.68114\n}","import React from \"react\"\n\n\nexport default function CovidDataInfo({ total = {}, country = {}, date }) {\n  return (\n    <div id='covidDataInfo' className=\"card light\">\n      <div>\n        <p>Cases on {date.format('DD-MM-YYYY')}</p>\n        <p>{country.name}</p>\n        {/* <h1>{total.Confirmed}</h1> */}\n        <div>\n          <div className='flex baseline text-row'>\n            <p>Confirmed:</p><h2>{country.Confirmed}</h2>\n          </div>\n          <div className='flex baseline text-row'>\n            <p>Deaths:</p><h3>{country.Deaths}</h3>\n          </div>\n          <div className='flex baseline text-row'>\n          <p>Recovered:</p><h3>{country.Recovered}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","\nimport React from 'react'\nconst ReactMarkdown = require(\"react-markdown\")\n\n\nexport default function Title({ header, theme }) {\n\treturn (\n\t\t<div>\n\t\t\t{header && (\n\t\t\t\t<div id=\"header\" className={theme}>\n\t\t\t\t\t<ReactMarkdown source={header}/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}","import React from \"react\"\nconst ReactMarkdown = require(\"react-markdown\")\n\nconst alignments = {\n  left: \"lefty\",\n  center: \"centered\",\n  right: \"righty\"\n}\n\nfunction DummyText() {\n  return (<div className=\"chapter-dummy\">\n    <div className=\"chapter_date-dummy\" />\n    <div className=\"chapter_title-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n\n  </div>)\n}\n\nexport default function Chapter({\n  id,\n  theme,\n  text,\n  currentChapterID,\n  covidData,\n  slide = false,\n  alignment = \"left\",\n}) {\n  // old school class conditioning\n  let classList = id === currentChapterID ? \"step active\" : \"step\"\n  // if slide the want to also apply the theme to color the overall background\n  classList += slide ? ` slide` : \"\"\n  classList += ` ${alignments[alignment]}`\n  return (\n    <div id={id} className={classList + ' card'}>\n      <div className={theme}>\n        {text ? <div className='flex baseline'>\n          {covidData.Confirmed > 0 ?\n            <div className='flex baseline text-row'><p>Confirmed: {covidData.Confirmed}</p>\n              <p>Deaths: {covidData.Deaths} </p>\n              <p>Recovered: {covidData.Recovered} </p>  </div> : ''}\n          <div className='flex--grow'></div>\n        </div> : ''}\n        {text ? <ReactMarkdown source={text} /> : <DummyText />}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Chapter from './Chapter'\n\nexport default function Chapters({ chapters, theme, currentChapterID, covidData }) {\n\treturn (\n\t\t<div id=\"story\">\n\t\t\t<div id=\"features\">\n\t\t\t\t{chapters.map((chapter) => (\n\t\t\t\t\t<Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID} covidData={covidData}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function HazardButton({ theme, onClick, isInFullMap }) {\n\tconst icon = isInFullMap ?  '/text_fields-24px.svg' : '/biohazard.png' \n\treturn (\n\t\t<button id=\"hazardButton\" onClick={onClick} className=\"\">\n\t\t\t<img src={icon} />\n\t\t</button>\n\t)\n}","import React from \"react\"\n\nexport default function Footer({ footer, theme }) {\n\treturn (\n\t\t<div>\n\t\t\t{footer && (\n\t\t\t\t<div id=\"footer\" className={theme}>\n\t\t\t\t\t<p>{footer}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}","import React, { Component } from 'react'\nimport './App.css'\nimport config from './config.js'\nimport DeckGL, { MapController, FlyToInterpolator } from 'deck.gl'\nimport { StaticMap } from 'react-map-gl'\nimport scrollama from 'scrollama'\nimport { GeoJsonLayer } from '@deck.gl/layers'\nimport axios from 'axios'\nimport { Marker } from 'react-map-gl'\nimport moment from 'moment'\nimport csv from 'csvtojson'\nimport { aggregateAll, aggregateRegion, transitions, WORLD_COORDINATE } from './utils.js'\nimport CovidDataInfo from './CovidDataInfo'\nimport Title from './Title'\nimport Chapters from './Chapters'\nimport HazardButton from './HazardButton'\nimport Footer from './Footer.js'\n\nconst initialViewState = {\n\tlongitude: 15.38585,\n\tlatitude: 26.68114,\n\tzoom: 2,\n\tpitch: 0,\n\tbearing: 0\n}\n\n\nexport default class App extends Component {\n\tstate = {\n\t\tcurrentChapter: config.chapters[0],\n\t\tviewState: initialViewState,\n\t\tisFlyingToFullMap: false,\n\t\tisFlyingFromFullMap: false,\n\t\tisInFullMap: false, // used to know where we hare in the full map mode\n\t\tdate: config.chapters[0].date,\n\t\tdata: [],\n\t\ttotalCovidData: {},\n\t\tcountryCovidData: {},\n\t\tgeoCountries: []\n\t}\n\n\tscroller = scrollama()\n\n\tcomponentDidMount() {\n\t\t/**\n\t\t * Here we setup `scrollama` used to \n\t\t * update the chapters when we scroll down/up.\n\t\t */\n\n\t\twindow.addEventListener(\"resize\", () => this.scroller.resize())\n\t\tthis.scroller\n\t\t\t.setup({\n\t\t\t\tstep: '.step',\n\t\t\t\toffset: 0.5,\n\t\t\t\tprogress: true\n\t\t\t})\n\t\t\t.onStepEnter(async (response) => {\n\t\t\t\t// TODO this should go inside a method like loadChapter\n\t\t\t\t// we want to find out chapter and then move to it\n\t\t\t\tlet chapter = config.chapters[response.element.id]\n\t\t\t\t// conver the date using moment\n\t\t\t\tchapter.date = chapter.date ? moment(chapter.date, 'DD-MM-YYYY') : undefined\n\t\t\t\t// parse the date\n\t\t\t\tconst date = chapter.date ? chapter.date.format('DD-MM-YYYY') + '-' : ''\n\t\t\t\tconst { data } = await axios.get(`/chapters/${date}${chapter.name}.md`)\n\t\t\t\t// update chapter obj\n\t\t\t\tchapter.text = data\n\t\t\t\tchapter.date = chapter.date ? moment(chapter.date, 'DD-MM-YYYY') : chapter.date\n\t\t\t\t// if we have a new location we want to move to it\n\t\t\t\tif (chapter.location) {\n\t\t\t\t\tthis.setChapterLocation(chapter)\n\t\t\t\t\tif (chapter.date) this.getDataFromDate(chapter.date)\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentChapter: chapter,\n\t\t\t\t\t\tisInFullMap: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.onStepExit(() => { })\n\n\t\t// get all data as soon as the component is ready\n\t\tconst geoDatas = [axios.get('/countries-small.geojson'), axios.get('/china-provinces.geojson')]\n\n\t\tPromise.all(geoDatas)\n\t\t\t.then((data) => {\n\t\t\t\tconst countries = data[0].data\n\t\t\t\tlet china = data[1].data\n\t\t\t\t// china data has the name as `NAME` field, to be coherent with\n\t\t\t\t// countries data we included the `.name` field\n\t\t\t\tchina.features = china.features.map((el) => {\n\t\t\t\t\tel.properties.name = el.properties.NAME\n\t\t\t\t\treturn el\n\t\t\t\t})\n\n\t\t\t\tconst contriesAndChina = {\n\t\t\t\t\ttype: countries.type,\n\t\t\t\t\tfeatures: [...countries.features, ...china.features]\n\t\t\t\t}\n\t\t\t\treturn contriesAndChina\n\t\t\t})\n\t\t\t.then((geoCountries) => this.setState({ geoCountries }))\n\n\t}\n\n\tsetChapterLocation = (chapter) => {\n\t\t/***\n\t\t * This function sets the given chapter as current chapter. This implies updating the location and the date.\n\t\t */\n\t\t// if we are scrolling up we want to keep the previos animation duration\n\t\tconst weAreGoingBack = this.state.currentChapter.id > chapter.id\n\t\tlet duration = weAreGoingBack ? this.state.currentChapter.duration : chapter.duration\n\t\tthis.setState({\n\t\t\tcurrentChapter: chapter,\n\t\t\tdate: chapter.date,\n\t\t\tisInFullMap: false,\n\t\t\tviewState: {\n\t\t\t\t...chapter.location,\n\t\t\t\t// transitionEasing: transitions[chapter.transition || 'ease'],\n\t\t\t\t// transitionDuration: duration || 1000,\n\t\t\t\t// transitionInterpolator: new FlyToInterpolator()\n\n\t\t\t}\n\t\t})\n\t}\n\n\tgetChapterGeoLayer({ countries }) {\n\t\t/***\n\t\t * This function return the geo layer for the chapter. If chapter.countries is not empty, \n\t\t * these countries will be highlighted.\n\t\t */\n\n\t\tlet data = []\n\t\tif (countries && this.state.geoCountries.features) {\n\t\t\tconst features = this.state.geoCountries.features.filter((d) => countries.includes(d.properties.name))\n\t\t\tdata = { type: this.state.geoCountries.type, features }\n\t\t}\n\n\t\tconst layer = new GeoJsonLayer({\n\t\t\tid: 'geojson-layer',\n\t\t\tdata: data,\n\t\t\tpickable: true,\n\t\t\tfilled: true,\n\t\t\textruded: true,\n\t\t\tlineWidthScale: 20,\n\t\t\tlineWidthMinPixels: 2,\n\t\t\tgetFillColor: [155, 0, 0, 100],\n\t\t\tgetRadius: 100,\n\t\t\tgetLineWidth: 1,\n\t\t\tgetElevation: 30\n\t\t})\n\n\t\treturn layer\n\t}\n\n\tgetCovidGeoLayer() {\n\t\t/**\n\t\t * This function return the go layer for the covis data displayed when we are in full map view.\n\t\t */\n\t\tconst findDataForGeoRegion = (d) =>\n\t\t\tthis.state.data.find(\n\t\t\t\t(el) => el['Province/State'] == d.properties.name || el['Country/Region'] == d.properties.name\n\t\t\t)\n\n\t\tconst getName = (d) => {\n\t\t\tconst province = d['Province/State']\n\t\t\tconst country = d['Country/Region']\n\n\t\t\treturn `${province != '' ? province + ' ' : ''}${country}`\n\n\t\t}\n\t\tconst layer = new GeoJsonLayer({\n\t\t\tid: 'geojson-layer',\n\t\t\tdata: this.state.geoCountries,\n\t\t\tpickable: true,\n\t\t\tstroked: true,\n\t\t\tfilled: true,\n\t\t\tgetFillColor: (d) => {\n\t\t\t\t// base color is transparent\n\t\t\t\tlet colour = [0, 0, 0, 0]\n\t\t\t\tconst covisData = findDataForGeoRegion(d)\n\t\t\t\tif (covisData) {\n\t\t\t\t\tif (covisData.Confirmed > 0) {\n\t\t\t\t\t\t// TODO logiritmic scale?\n\t\t\t\t\t\tconst ratio = Number(covisData.Confirmed) / (this.state.totalCovidData.Confirmed / 150)\n\t\t\t\t\t\tcolour = [255 * ratio, 0, 0, 100]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn colour\n\t\t\t},\n\t\t\tgetLineColor: [255, 255, 255, 255],\n\t\t\tonHover: ({ object, x, y }) => {\n\t\t\t\tif (object) {\n\t\t\t\t\t// store the current country stats\n\t\t\t\t\tconst covisData = findDataForGeoRegion(object)\n\t\t\t\t\t// default is 0 cases for a country not in the covis data\n\t\t\t\t\tlet countryCovidData = {\n\t\t\t\t\t\tConfirmed: 0, Deaths: 0, Recovered: 0, name: object.properties.name\n\t\t\t\t\t}\n\t\t\t\t\tif (covisData) {\n\t\t\t\t\t\tcountryCovidData = {\n\t\t\t\t\t\t\tConfirmed: Number(covisData.Confirmed),\n\t\t\t\t\t\t\tDeaths: Number(covisData.Deaths),\n\t\t\t\t\t\t\tRecovered: Number(covisData.Recovered),\n\t\t\t\t\t\t\tname: getName(covisData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setState({ countryCovidData })\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn layer\n\t}\n\n\tgetDataFromDate(date) {\n\t\t/***\n\t\t * This function gets the data from a github repo using the current date and returns a list of objects.\n\t\t *  Be awere, the format must be MM-DD-YYYY. We are using moment.js to properly parse the date.\n\t\t */\n\t\tconst dateFormat = date.format('MM-DD-YYYY')\n\t\tconst DATA_URL = '/api/v1/data/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/'\n\t\tconst url = `${DATA_URL}${dateFormat}.csv`\n\t\tconst csvParser = csv()\n\t\treturn axios\n\t\t\t.get(url)\n\t\t\t.then(({ data }) => data)\n\t\t\t.then((data) => csvParser.fromString(data))\n\t\t\t.then((data) => aggregateRegion(data, 'US'))\n\t\t\t.then((data) => {\n\t\t\t\tconst totalCovidData = aggregateAll(data)\n\t\t\t\tthis.setState({ data, totalCovidData })\n\t\t\t})\n\t\t\t.catch(e => console.error(e))\n\t}\n\n\n\tonHazardButton = () => {\n\t\t/***\n\t\t * Hazard button switch between full map view and the chapters view\n\t\t */\n\t\tif (!this.state.isInFullMap) {\n\t\t\t// display the whole world (a whole newwww worllldd)\n\t\t\tconst viewState = {\n\t\t\t\t...WORLD_COORDINATE,\n\t\t\t\tzoom: 2,\n\t\t\t\t...{\n\t\t\t\t\ttransitionEasing: transitions['ease'],\n\t\t\t\t\ttransitionDuration: 2000,\n\t\t\t\t\ttransitionInterpolator: new FlyToInterpolator()\n\t\t\t\t}\n\t\t\t}\n\t\t\t// in order\n\t\t\t// 1) get the data using the date\n\t\t\t// 2) set the state to move the map \n\t\t\t// 3) wait 2s (the duration time of the fly animation) to display the data\n\t\t\tthis.setState({\n\t\t\t\tviewState,\n\t\t\t\tisFlyingToFullMap: true,\n\t\t\t\tisFlyingFromFullMap: false,\n\t\t\t\tisInFullMap: true,\n\t\t\t})\n\t\t\tsetTimeout(() => this.setState({ isFlyingToFullMap: false }), 2000)\n\n\t\t} else {\n\t\t\t// TODO we should also ask and get the text/process the data!!\n\t\t\t// go back to the current chapter location\n\t\t\tthis.setState({ isFlyingFromFullMap: true, isFlyingToFullMap: false, isInFullMap: false })\n\t\t\tthis.setChapterLocation(this.state.currentChapter)\n\t\t}\n\t}\n\n\tonViewStateChange = ({ viewState }) => {\n\t\tthis.setState({ viewState })\n\t}\n\n\tmapStyle = () => {\n\t\t/***\n\t\t * This function returns the style used by DECK.gl. \n\t\t * When we are not in full map we need to set the z-index to -1 in onder\n\t\t * to disable the map controller.\n\t\t */\n\t\tconst zIndex = this.state.isInFullMap ? 99 : -1\n\t\treturn {\n\t\t\tzIndex,\n\t\t\tposition: 'fixed'\n\t\t}\n\t}\n\n\trender() {\n\t\tconst geoLayer = this.state.isInFullMap && !this.state.isFlyingToFullMap\n\t\t\t? this.getCovidGeoLayer()\n\t\t\t: this.getChapterGeoLayer(this.state.currentChapter)\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Title {...config} />\n\t\t\t\t<DeckGL\n\t\t\t\t\tviewState={this.state.viewState}\n\t\t\t\t\tonViewStateChange={this.onViewStateChange}\n\t\t\t\t\tcontroller={MapController}\n\t\t\t\t\tlayers={[geoLayer]}\n\t\t\t\t\tstyle={this.mapStyle()}\n\t\t\t\t>\n\t\t\t\t\t<StaticMap\n\t\t\t\t\t\tmapStyle=\"mapbox://styles/zuppif/ck7dq0q6x1hwo1inu7n734ou1\"\n\t\t\t\t\t\tmapboxApiAccessToken={config.accessToken}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.currentChapter.marker && !this.state.isInFullMap ? (\n\t\t\t\t\t\t\t<Marker {...this.state.currentChapter.marker}>\n\t\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/MK4NUzI.png\" />\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</StaticMap>\n\t\t\t\t</DeckGL>\n\t\t\t\t{this.state.isInFullMap ? <CovidDataInfo total={this.state.totalCovidData}\n\t\t\t\t\tcountry={this.state.countryCovidData} date={this.state.date} /> : ''}\n\t\t\t\t<Chapters {...config} currentChapterID={this.state.currentChapter.id} covidData={this.state.totalCovidData} />\n\t\t\t\t{this.state.date && <HazardButton theme={config.theme} onClick={this.onHazardButton} isInFullMap={this.state.isInFullMap} />}\n\t\t\t\t<Footer {...config} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}