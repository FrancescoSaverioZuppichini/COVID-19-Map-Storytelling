{"version":3,"sources":["config.js","utils.js","CovidDataInfo.js","Title.js","Chapter.js","Chapters.js","HazardButton.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["config","style","accessToken","showMarkers","theme","alignment","header","title","subtitle","byline","footer","chapters","id","location","longitude","latitude","zoom","pitch","bearing","countries","duration","marker","slide","transitions","break","TRANSITION_EVENTS","BREAK","ease","easeCubic","WORLD_COORDINATE","CovidDataInfo","total","country","date","className","format","name","Confirmed","Deaths","Recovered","ReactMarkdown","require","Title","source","alignments","left","center","right","DummyText","Chapter","text","currentChapterID","covidData","classList","Chapters","map","chapter","key","HazardButton","onClick","icon","isInFullMap","src","Footer","initialViewState","App","state","currentChapter","viewState","isFlyingToFullMap","isFlyingFromFullMap","moment","data","totalCovidData","countryCovidData","geoCountries","extractDateFromChapter","firstLine","split","console","log","isValid","undefined","setChapterLocation","setState","transitionEasing","transition","transitionDuration","transitionInterpolator","FlyToInterpolator","mapOnLoad","scrollama","setup","step","offset","progress","onStepEnter","response","a","find","chap","element","axios","get","getDataFromDate","onStepExit","onHazardButton","setTimeout","onViewStateChange","mapStyle","zIndex","position","geoDatas","Promise","all","then","china","features","el","properties","NAME","type","this","filter","d","includes","GeoJsonLayer","pickable","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getRadius","getLineWidth","getElevation","findDataForGeoRegion","getName","province","stroked","colour","covisData","Number","getLineColor","onHover","object","x","y","dateFormat","url","csvParser","csv","fromString","region","aggregateRegion","aggregated","aggregateAll","geoLayer","getCovidGeoLayer","getChapterGeoLayer","controller","MapController","layers","mapboxApiAccessToken","onLoad","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f268361f.chunk.js","sourcesContent":["var config = {\n\tstyle: 'mapbox://styles/mapbox/dark-v10',\n\taccessToken: 'pk.eyJ1IjoienVwcGlmIiwiYSI6ImNqdm96Z3d2ejFibG80OXZuZWdwMWgyemwifQ.aFnHrPBYUqnYcK2jAwzAZA',\n\tshowMarkers: true,\n\ttheme: 'light',\n\talignment: 'left',\n\theader: `# COVID-19\n## A story told by maps\n*By a Francesco Saverio Zuppichini and Riccardo Pisoni*\n\nWe decided to tell the story of the new pandemic known as *corona virus* (COVID-19) using maps. At any time you can press the button on the down right with the hazard icon to see all the cases on the story's date in the world.\n\n**Behind each number there is a person**, remember it.\n\t`,\n\ttitle: 'COVID-19',\n\tsubtitle: 'A story told by maps',\n\tbyline: 'By a Francesco Saverio Zuppichini and Riccardo Pisoni',\n\tfooter: 'Source: source citations, etc.',\n\tchapters: [\n\t\t{\n\t\t\tid: '0', // file name\n\t\t\tlocation: {\n\t\t\t\tlongitude: 102.63073,\n\t\t\t\tlatitude: 35.53723,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tcountries: [ 'China' ],\n\t\t},\n\t\t{\n\t\t\tid: '1',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.301859,\n\t\t\t\tlatitude: 30.592357,\n\t\t\t\tzoom: 10,\n\t\t\t\tpitch: 60,\n\t\t\t\tbearing: 0\n            },\n            duration: 4000,\n\t\t},\n\t\t{\n\t\t\tid: '2',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.275273,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 15,\n\t\t\t\tpitch: 15,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude: 114.28039,\n\t\t\t\tlatitude: 30.66877\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: '3',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  9.86052,\n\t\t\t\tlatitude: 27.91264 ,\n\t\t\t\tzoom: 2.2,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n            },\n            duration: 4000,\n\t\t\tcountries: [ 'China', 'Hong Kong', 'Taiwan', 'United States of America', 'Japan', 'Thailand', 'South Korea']\n        },\n        \n        {\n\t\t\tid: '4',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 114.258286,\n\t\t\t\tlatitude: 30.617847,\n\t\t\t\tzoom: 14,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude:  114.261636,\n\t\t\t\tlatitude: 30.617810,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '5',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 104.68358,\n\t\t\t\tlatitude: 33.21781,\n\t\t\t\tzoom: 4,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t},\n\t\t{\n\t\t\tid: '6',\n\t\t\tlocation: {\n\t\t\t\tlongitude: -117.60365,\n\t\t\t\tlatitude: 34.05862,\n\t\t\t\tzoom: 12,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlongitude: -117.60365,\n\t\t\t\tlatitude: 34.05862,\n\t\t\t},\n\t\t\tduration: 5000,\n\t\t},\n\t\t{\n\t\t\tid: '7',\n\t\t\tslide: true\n        },\n        {\n\t\t\tid: '8',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  114.275273,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 45,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 2000,\n        },\n        {\n\t\t\tid: '9',\n\t\t\tlocation: {\n\t\t\t\tlongitude:   7.33942,\n\t\t\t\tlatitude: 50.81065,\n\t\t\t\tzoom: 5,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n            duration: 3000,\n            countries: [ 'Germany']\n        },\n        {\n\t\t\tid: '10',\n\t\t\tlocation: {\n\t\t\t\tlongitude:   7.33942,\n\t\t\t\tlatitude: 50.81065,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n            countries: [ 'Germany']\n\t\t},\n\t\t{\n\t\t\tid: '11',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  119.20476,\n\t\t\t\tlatitude: 10.76389,\n\t\t\t\tzoom: 5,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t\tcountries: ['Philippines']\n\t\t},\n\t\t{\n\t\t\tid: '12',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  9.86052,\n\t\t\t\tlatitude: 27.91264 ,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 1000\n\t\t},\n\t\t{\n\t\t\tid: '13',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 139.56233,\n\t\t\t\tlatitude: 35.43110 ,\n\t\t\t\tzoom: 11,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 4000\n\t\t},\n\t\t{\n\t\t\tid: '14',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -107.68517,\n\t\t\t\tlatitude: 38.67691 ,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000,\n\t\t\tcountries: [ 'US' ]\n\t\t},\n\t\t{\n\t\t\tid: '15',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -107.68517,\n\t\t\t\tlatitude: 38.67691 ,\n\t\t\t\tzoom: 4,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tduration: 3000\n\t\t},\n\t\t{\n\t\t\tid: '16',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 102.63073,\n\t\t\t\tlatitude: 35.53723,\n\t\t\t\tzoom: 3,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '17',\n\t\t\tlocation: {\n\t\t\t\tlongitude: 113.49339,\n\t\t\t\tlatitude: 30.66588,\n\t\t\t\tzoom: 6,\n\t\t\t\tpitch: 30,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '18',\n\t\t\tlocation: {\n\t\t\t\tlongitude:  -114.95366,\n\t\t\t\tlatitude: 55.91607,\n\t\t\t\tzoom: 3.8,\n\t\t\t\tpitch: 0,\n\t\t\t\tbearing: 0\n\t\t\t},\n\t\t\tcountries: [ 'Canada' ]\n\n\t\t},\n\t]\n}\n\n// https://demos.mapbox.com/location-helper/\n\nexport default config\n","import DeckGL, { TRANSITION_EVENTS } from 'deck.gl'\nimport { easeCubic } from 'd3-ease'\n\n\nexport function aggregateAll(data) {\n    let aggregated = {\n        Confirmed: 0, Deaths: 0, Recovered: 0\n    }\n\n    for (let el of data) {\n        aggregated.Confirmed += Number(el.Confirmed)\n        aggregated.Deaths += Number(el.Deaths)\n        aggregated.Recovered += Number(el.Recovered)\n\n    }\n\n    return aggregated\n}\n\nexport function aggregateRegion(data, region) {\n    let covisData = { Confirmed: 0, Deaths: 0, Recovered: 0 }\n\n    for (let el of data) {\n        if (el['Country/Region'] === region) {\n            covisData.Confirmed += Number(el.Confirmed)\n            covisData.Deaths += Number(el.Deaths)\n            covisData.Recovered += Number(el.Recovered)\n        }\n    }\n\n    covisData['Country/Region'] = region\n\n    return [covisData, ...data]\n}\n\nexport const transitions = {\n\tbreak: () => TRANSITION_EVENTS.BREAK,\n\tease: easeCubic\n}\n\nexport const WORLD_COORDINATE = {\n\tlatitude: 15.38585,\n\tlongitude: 26.68114\n}","import React from \"react\"\n\n\nexport default function CovidDataInfo({ total = {}, country = {}, date }) {\n  return (\n    <div id='covidDataInfo' className=\"card light\">\n      <div>\n        <p>Cases on {date.format('DD-MM-YYYY')}</p>\n        <p>{country.name}</p>\n        {/* <h1>{total.Confirmed}</h1> */}\n        <div>\n          <div className='flex baseline text-row'>\n            <p>Confirmed:</p><h2>{country.Confirmed}</h2>\n          </div>\n          <div className='flex baseline text-row'>\n            <p>Deaths:</p><h3>{country.Deaths}</h3>\n          </div>\n          <div className='flex baseline text-row'>\n          <p>Recovered:</p><h3>{country.Recovered}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","\nimport React from 'react'\nconst ReactMarkdown = require(\"react-markdown\")\n\n\nexport default function Title({ header, theme }) {\n\treturn (\n\t\t<div>\n\t\t\t{header && (\n\t\t\t\t<div id=\"header\" className={theme}>\n\t\t\t\t\t<ReactMarkdown source={header}/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}","import React from \"react\"\nconst ReactMarkdown = require(\"react-markdown\")\n\nconst alignments = {\n  left: \"lefty\",\n  center: \"centered\",\n  right: \"righty\"\n}\n\nfunction DummyText() {\n  return (<div className=\"chapter-dummy\">\n    <div className=\"chapter_date-dummy\" />\n    <div className=\"chapter_title-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n    <div className=\"chapter_text-dummy\" />\n\n  </div>)\n}\n\nexport default function Chapter({\n  id,\n  theme,\n  text,\n  currentChapterID,\n  covidData,\n  slide = false,\n  alignment = \"left\",\n}) {\n  // old school class conditioning\n  let classList = id === currentChapterID ? \"step active\" : \"step\"\n  // if slide the want to also apply the theme to color the overall background\n  classList += slide ? ` slide` : \"\"\n  classList += ` ${alignments[alignment]}`\n  return (\n    <div id={id} className={classList + ' card'}>\n      <div className={theme}>\n      {text ? <small>{`#${id}`}</small> : ''}\n        {text ? <div className='flex baseline'>\n          {covidData.Confirmed > 0 ?\n            <div className='flex baseline text-row'><p>Confirmed: {covidData.Confirmed}</p>\n              <p>Deaths: {covidData.Deaths} </p>\n              <p>Recovered: {covidData.Recovered} </p>  </div> : ''}\n          <div className='flex--grow'></div>\n        </div> : ''}\n        {text ? <ReactMarkdown source={text} /> : <DummyText />}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Chapter from './Chapter'\n\nexport default function Chapters({ chapters, theme, currentChapterID, covidData }) {\n\treturn (\n\t\t<div id=\"story\">\n\t\t\t<div id=\"features\">\n\t\t\t\t{chapters.map((chapter) => (\n\t\t\t\t\t<Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID} covidData={covidData}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function HazardButton({ theme, onClick, isInFullMap }) {\n\tconst icon = isInFullMap ?  '/text_fields-24px.svg' : '/biohazard.png' \n\treturn (\n\t\t<button id=\"hazardButton\" onClick={onClick} className=\"\">\n\t\t\t<img src={icon} />\n\t\t</button>\n\t)\n}","import React from \"react\"\n\nexport default function Footer({ footer, theme }) {\n\treturn (\n\t\t<div>\n\t\t\t{footer && (\n\t\t\t\t<div id=\"footer\" className={theme}>\n\t\t\t\t\t<p>{footer}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}","import React, { Component } from 'react'\nimport './App.css'\nimport config from './config.js'\nimport DeckGL, { MapController, FlyToInterpolator } from 'deck.gl'\nimport { StaticMap } from 'react-map-gl'\nimport scrollama from 'scrollama'\nimport { GeoJsonLayer } from '@deck.gl/layers'\nimport axios from 'axios'\nimport { Marker } from 'react-map-gl'\nimport moment from 'moment'\nimport csv from 'csvtojson'\nimport { aggregateAll, aggregateRegion, transitions, WORLD_COORDINATE } from './utils.js'\nimport CovidDataInfo from './CovidDataInfo'\nimport Title from './Title'\nimport Chapters from './Chapters'\nimport HazardButton from './HazardButton'\nimport Footer from './Footer.js'\n\nconst initialViewState = {\n\tlongitude: 15.38585,\n\tlatitude: 26.68114,\n\tzoom: 2,\n\tpitch: 0,\n\tbearing: 0\n}\n\n\nexport default class App extends Component {\n\tstate = {\n\t\tcurrentChapter: config.chapters[0],\n\t\tviewState: initialViewState,\n\t\tisFlyingToFullMap: false,\n\t\tisFlyingFromFullMap: false,\n\t\tisInFullMap: false, // used to know where we hare in the full map mode\n\t\tdate: moment(\"01-02-2020\", 'DD-MM-YYYY'),\n\t\tdata: [],\n\t\ttotalCovidData: {},\n\t\tcountryCovidData: {},\n\t\tgeoCountries: []\n\t}\n\n\tcomponentDidMount() {\n\t\t// get all data as soon as the component is ready\n\t\tconst geoDatas = [axios.get('/countries-small.geojson'), axios.get('/china-provinces.geojson')]\n\n\t\tPromise.all(geoDatas)\n\t\t\t.then((data) => {\n\t\t\t\tconst countries = data[0].data\n\t\t\t\tlet china = data[1].data\n\t\t\t\t// china data has the name as `NAME` field, to be coherent with\n\t\t\t\t// countries data we included the `.name` field\n\t\t\t\tchina.features = china.features.map((el) => {\n\t\t\t\t\tel.properties.name = el.properties.NAME\n\t\t\t\t\treturn el\n\t\t\t\t})\n\n\t\t\t\tconst contriesAndChina = {\n\t\t\t\t\ttype: countries.type,\n\t\t\t\t\tfeatures: [...countries.features, ...china.features]\n\t\t\t\t}\n\t\t\t\treturn contriesAndChina\n\t\t\t})\n\t\t\t.then((geoCountries) => this.setState({ geoCountries }))\n\n\t}\n\n\textractDateFromChapter = ({ text }) => {\n\t\t/***\n\t\t * In the markdown files with the text we have the data in the first line has DD-MM-YYYY. \n\t\t * This function extract the date from the text and store it in the app state\n\t\t */\n\t\tconst firstLine = text.split('\\n')[0]\n\t\tlet date = moment(firstLine, 'DD-MM-YYYY')\n\t\tconsole.log(date.format('DD-MM-YYYY'))\n\t\tdate = date.isValid() ? date : undefined\n\t\treturn date\n\t}\n\n\tsetChapterLocation = (chapter) => {\n\t\t/***\n\t\t * This function sets the given chapter as current chapter. This implies updating the location and the date.\n\t\t */\n\t\t// if we are scrolling up we want to keep the previos animation duration\n\t\tconst weAreGoingBack = this.state.currentChapter.id > chapter.id\n\t\tlet duration = weAreGoingBack ? this.state.currentChapter.duration : chapter.duration\n\t\t// if not new date, use the last one\n\t\tconst date = chapter.date === undefined ? this.state.date : chapter.date\n\t\tthis.setState({\n\t\t\tcurrentChapter: chapter,\n\t\t\tdate: date,\n\t\t\tisInFullMap: false,\n\t\t\tviewState: {\n\t\t\t\t...chapter.location,\n\t\t\t\t...{\n\t\t\t\t\ttransitionEasing: transitions[chapter.transition || 'ease'],\n\t\t\t\t\ttransitionDuration: duration || 1000,\n\t\t\t\t\ttransitionInterpolator: new FlyToInterpolator()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tgetChapterGeoLayer({ countries }) {\n\t\t/***\n\t\t * This function return the geo layer for the chapter. If chapter.countries is not empty, \n\t\t * these countries will be highlighted.\n\t\t */\n\n\t\tlet data = []\n\t\tif (countries && this.state.geoCountries.features) {\n\t\t\tconst features = this.state.geoCountries.features.filter((d) => countries.includes(d.properties.name))\n\t\t\tdata = { type: this.state.geoCountries.type, features }\n\t\t}\n\n\t\tconst layer = new GeoJsonLayer({\n\t\t\tid: 'geojson-layer',\n\t\t\tdata: data,\n\t\t\tpickable: true,\n\t\t\tfilled: true,\n\t\t\textruded: true,\n\t\t\tlineWidthScale: 20,\n\t\t\tlineWidthMinPixels: 2,\n\t\t\tgetFillColor: [155, 0, 0, 100],\n\t\t\tgetRadius: 100,\n\t\t\tgetLineWidth: 1,\n\t\t\tgetElevation: 30\n\t\t})\n\n\t\treturn layer\n\t}\n\n\tgetCovidGeoLayer() {\n\t\t/**\n\t\t * This function return the go layer for the covis data displayed when we are in full map view.\n\t\t */\n\t\tconst findDataForGeoRegion = (d) =>\n\t\t\tthis.state.data.find(\n\t\t\t\t(el) => el['Province/State'] == d.properties.name || el['Country/Region'] == d.properties.name\n\t\t\t)\n\n\t\tconst getName = (d) => {\n\t\t\tconst province = d['Province/State']\n\t\t\tconst country = d['Country/Region']\n\n\t\t\treturn `${province != '' ? province + ' ' : ''}${country}`\n\n\t\t}\n\t\tconst layer = new GeoJsonLayer({\n\t\t\tid: 'geojson-layer',\n\t\t\tdata: this.state.geoCountries,\n\t\t\tpickable: true,\n\t\t\tstroked: true,\n\t\t\tfilled: true,\n\t\t\tgetFillColor: (d) => {\n\t\t\t\t// base color is transparent\n\t\t\t\tlet colour = [0, 0, 0, 0]\n\t\t\t\tconst covisData = findDataForGeoRegion(d)\n\t\t\t\tif (covisData) {\n\t\t\t\t\tif (covisData.Confirmed > 0) {\n\t\t\t\t\t\t// TODO logiritmic scale?\n\t\t\t\t\t\tconst ratio = Number(covisData.Confirmed) / (this.state.totalCovidData.Confirmed / 150)\n\t\t\t\t\t\tcolour = [255 * ratio, 0, 0, 100]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn colour\n\t\t\t},\n\t\t\tgetLineColor: [255, 255, 255, 255],\n\t\t\tonHover: ({ object, x, y }) => {\n\t\t\t\tif (object) {\n\t\t\t\t\t// store the current country stats\n\t\t\t\t\tconst covisData = findDataForGeoRegion(object)\n\t\t\t\t\t// default is 0 cases for a country not in the covis data\n\t\t\t\t\tlet countryCovidData = {\n\t\t\t\t\t\tConfirmed: 0, Deaths: 0, Recovered: 0, name: object.properties.name\n\t\t\t\t\t}\n\t\t\t\t\tif (covisData) {\n\t\t\t\t\t\tcountryCovidData = {\n\t\t\t\t\t\t\tConfirmed: Number(covisData.Confirmed),\n\t\t\t\t\t\t\tDeaths: Number(covisData.Deaths),\n\t\t\t\t\t\t\tRecovered: Number(covisData.Recovered),\n\t\t\t\t\t\t\tname: getName(covisData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setState({ countryCovidData })\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn layer\n\t}\n\n\tgetDataFromDate(date) {\n\t\t/***\n\t\t * This function gets the data from a github repo using the current date and returns a list of objects.\n\t\t *  Be awere, the format must be MM-DD-YYYY. We are using moment.js to properly parse the date.\n\t\t */\n\t\tconst dateFormat = date.format('MM-DD-YYYY')\n\t\tconst DATA_URL = '/api/v1/data/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/'\n\t\tconst url = `${DATA_URL}${dateFormat}.csv`\n\t\tconst csvParser = csv()\n\t\treturn axios\n\t\t\t.get(url)\n\t\t\t.then(({ data }) => data)\n\t\t\t.then((data) => csvParser.fromString(data))\n\t\t\t.then((data) => aggregateRegion(data, 'US'))\n\t\t\t.then((data) => {\n\t\t\t\tconst totalCovidData = aggregateAll(data)\n\t\t\t\tthis.setState({ data, totalCovidData })\n\t\t\t})\n\t}\n\n\tmapOnLoad = () => {\n\t\t/**\n\t\t * This function is called when the map is loaded. Here we setup `scrollama` used to \n\t\t * update the chapters when we scroll down/up.\n\t\t */\n\t\tconst scroller = scrollama()\n\n\t\tscroller\n\t\t\t.setup({\n\t\t\t\tstep: '.step',\n\t\t\t\toffset: 0.5,\n\t\t\t\tprogress: true\n\t\t\t})\n\t\t\t.onStepEnter(async (response) => {\n\t\t\t\t// TODO this should go inside a method like loadChapter\n\t\t\t\t// we want to find out chapter and then move to it\n\t\t\t\tlet chapter = config.chapters.find((chap) => chap.id === response.element.id)\n\t\t\t\t// TODO would be nice to preload the text or show some loading content on the card\n\t\t\t\tconst { data } = await axios.get(`/chapters/${chapter.id}.md`)\n\t\t\t\t// update chapter obj\n\t\t\t\tchapter.text = data\n\t\t\t\tchapter.date = this.extractDateFromChapter(chapter)\n\t\t\t\t// if we have a new location we want to move to it\n\t\t\t\tif (chapter.location) {\n\t\t\t\t\tthis.setChapterLocation(chapter)\n\t\t\t\t\tthis.getDataFromDate(this.state.date)\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentChapter: chapter,\n\t\t\t\t\t\tisInFullMap: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.onStepExit(() => { })\n\t}\n\n\tonHazardButton = () => {\n\t\t/***\n\t\t * Hazard button switch between full map view and the chapters view\n\t\t */\n\t\tif (!this.state.isInFullMap) {\n\t\t\t// display the whole world (a whole newwww worllldd)\n\t\t\tconst viewState = {\n\t\t\t\t...WORLD_COORDINATE,\n\t\t\t\tzoom: 2,\n\t\t\t\t...{\n\t\t\t\t\ttransitionEasing: transitions['ease'],\n\t\t\t\t\ttransitionDuration: 2000,\n\t\t\t\t\ttransitionInterpolator: new FlyToInterpolator()\n\t\t\t\t}\n\t\t\t}\n\t\t\t// in order\n\t\t\t// 1) get the data using the date\n\t\t\t// 2) set the state to move the map \n\t\t\t// 3) wait 2s (the duration time of the fly animation) to display the data\n\t\t\tthis.setState({\n\t\t\t\tviewState,\n\t\t\t\tisFlyingToFullMap: true,\n\t\t\t\tisFlyingFromFullMap: false,\n\t\t\t\tisInFullMap: true,\n\t\t\t})\n\t\t\tsetTimeout(() => this.setState({ isFlyingToFullMap: false }), 2000)\n\n\t\t} else {\n\t\t\t// TODO we should also ask and get the text/process the data!!\n\t\t\t// go back to the current chapter location\n\t\t\tthis.setState({ isFlyingFromFullMap: true, isFlyingToFullMap: false, isInFullMap: false })\n\t\t\tthis.setChapterLocation(this.state.currentChapter)\n\t\t}\n\t}\n\n\tonViewStateChange = ({ viewState }) => {\n\t\tthis.setState({ viewState })\n\t}\n\n\tmapStyle = () => {\n\t\t/***\n\t\t * This function returns the style used by DECK.gl. \n\t\t * When we are not in full map we need to set the z-index to -1 in onder\n\t\t * to disable the map controller.\n\t\t */\n\t\tconst zIndex = this.state.isInFullMap ? 99 : -1\n\t\treturn {\n\t\t\tzIndex,\n\t\t\tposition: 'fixed'\n\t\t}\n\t}\n\n\trender() {\n\t\tconst geoLayer = this.state.isInFullMap && !this.state.isFlyingToFullMap\n\t\t\t? this.getCovidGeoLayer()\n\t\t\t: this.getChapterGeoLayer(this.state.currentChapter)\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Title {...config} />\n\t\t\t\t<DeckGL\n\t\t\t\t\tviewState={this.state.viewState}\n\t\t\t\t\tonViewStateChange={this.onViewStateChange}\n\t\t\t\t\tcontroller={MapController}\n\t\t\t\t\tlayers={[geoLayer]}\n\t\t\t\t\tstyle={this.mapStyle()}\n\t\t\t\t>\n\t\t\t\t\t<StaticMap\n\t\t\t\t\t\tmapStyle=\"mapbox://styles/zuppif/ck7dq0q6x1hwo1inu7n734ou1\"\n\t\t\t\t\t\tmapboxApiAccessToken={config.accessToken}\n\t\t\t\t\t\tonLoad={this.mapOnLoad}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.currentChapter.marker && !this.state.isInFullMap ? (\n\t\t\t\t\t\t\t<Marker {...this.state.currentChapter.marker}>\n\t\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/MK4NUzI.png\" />\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</StaticMap>\n\t\t\t\t</DeckGL>\n\t\t\t\t{this.state.isInFullMap ? <CovidDataInfo total={this.state.totalCovidData}\n\t\t\t\t\tcountry={this.state.countryCovidData} date={this.state.date} /> : ''}\n\t\t\t\t<Chapters {...config} currentChapterID={this.state.currentChapter.id} covidData={this.state.totalCovidData} />\n\t\t\t\t<HazardButton theme={config.theme} onClick={this.onHazardButton} isInFullMap={this.state.isInFullMap} />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}